            - ชื่อ : การโต้ตอบครั้งแรก
  การใช้งาน: actions/first-interaction@v1.3.0
  กับ:
    # โทเค็นสำหรับที่เก็บข้อมูล สามารถส่งผ่านได้โดยใช้ {{ secrets.GITHUB_TOKEN }}
    repo-โทเค็น:
    # แสดงความคิดเห็นเพื่อโพสต์เกี่ยวกับประเด็นแรกของแต่ละบุคคล
    ข้อความปัญหา: # ตัวเลือก
    # แสดงความคิดเห็นในการโพสต์คำขอการดึงครั้งแรกของแต่ละบุคคล
    ข้อความ pr: # ตัวเลือก
          
            - ชื่อ : แคช
  ใช้: actions/cache@v4.2.3
  กับ:
    # รายการไฟล์ ไดเรกทอรี และรูปแบบไวลด์การ์ดที่ต้องแคชและเรียกคืน
    เส้นทาง:
    # คีย์ที่ชัดเจนสำหรับการคืนค่าและบันทึกแคช
    สำคัญ:
    # สตริงหลายบรรทัดที่เรียงลำดับซึ่งแสดงรายการคีย์ที่ตรงกับคำนำหน้า ซึ่งใช้ในการคืนค่าแคชเก่าหากไม่มีการเข้าถึงแคชสำหรับคีย์ โปรดทราบว่า `cache-hit` คืนค่า false ในกรณีนี้
    restore-keys: # ตัวเลือก
    # ขนาดชิ้นส่วนที่ใช้ในการแบ่งไฟล์ขนาดใหญ่ในระหว่างการอัปโหลดเป็นหน่วยไบต์
    ขนาดชิ้นส่วนการอัปโหลด: # ตัวเลือก
    # บูลีนเสริมเมื่อเปิดใช้งาน ช่วยให้ผู้รัน Windows สามารถบันทึกหรือเรียกคืนแคชที่สามารถเรียกคืนหรือบันทึกบนแพลตฟอร์มอื่นได้ตามลำดับ
    enableCrossOsArchive: # ตัวเลือก ค่าเริ่มต้นคือเท็จ
    # ล้มเหลวในเวิร์กโฟลว์หากไม่พบรายการแคช
    fail-on-cache-miss: # ตัวเลือก ค่าเริ่มต้นคือ false
    # ตรวจสอบว่ามีรายการแคชสำหรับอินพุตที่กำหนดหรือไม่ (คีย์, คีย์คืนค่า) โดยไม่ต้องดาวน์โหลดแคช
    ค้นหาเท่านั้น: # ตัวเลือก ค่าเริ่มต้นคือเท็จ
    # รันขั้นตอนการโพสต์เพื่อบันทึกแคชแม้ว่าขั้นตอนอื่นก่อนหน้านี้จะล้มเหลว
    save-always: # ตัวเลือก, ค่าเริ่มต้นคือ false
                      - ชื่อ: อัปโหลดสิ่งประดิษฐ์ที่สร้างขึ้น
  การใช้งาน: actions/upload-artifact@v4.6.2
  กับ:
    # ชื่อสิ่งประดิษฐ์
    ชื่อ: # ตัวเลือก ค่าเริ่มต้นคือสิ่งประดิษฐ์
    # ไฟล์ ไดเรกทอรี หรือรูปแบบไวด์การ์ดที่อธิบายถึงสิ่งที่จะอัปโหลด
    เส้นทาง:
    # พฤติกรรมที่ต้องการหากไม่พบไฟล์จากเส้นทางที่ให้มา
ตัวเลือกที่มี:
  warn: แสดงคำเตือนแต่ไม่ล้มเหลวในการดำเนินการ
  ข้อผิดพลาด: การดำเนินการล้มเหลวโดยมีข้อความแสดงข้อผิดพลาด
  ไม่สนใจ: ไม่แสดงคำเตือนหรือข้อผิดพลาดใด ๆ การกระทำจะไม่ล้มเหลว

    if-no-files-found: # ตัวเลือก ค่าเริ่มต้นคือ warn
    # ระยะเวลาที่สิ่งประดิษฐ์จะหมดอายุเป็นวัน 0 หมายถึงใช้การคงไว้เป็นค่าเริ่มต้น
ขั้นต่ำ 1 วัน สูงสุด 90 วัน เว้นแต่จะเปลี่ยนแปลงจากหน้าการตั้งค่าที่เก็บข้อมูล

    วันเก็บรักษา: # ตัวเลือก
    # ระดับการบีบอัดสำหรับ Zlib ที่จะนำไปใช้กับไฟล์เก็บถาวรอาร์ทิแฟกต์ ค่าสามารถอยู่ระหว่าง 0 ถึง 9: - 0: ไม่มีการบีบอัด - 1: ความเร็วที่ดีที่สุด - 6: การบีบอัดเริ่มต้น (เช่นเดียวกับ GNU Gzip) - 9: การบีบอัดที่ดีที่สุด ระดับที่สูงกว่าจะส่งผลให้การบีบอัดดีขึ้น แต่จะใช้เวลาในการดำเนินการนานกว่า สำหรับไฟล์ขนาดใหญ่ที่ไม่สามารถบีบอัดได้ง่าย แนะนำให้ใช้ค่า 0 เพื่อการอัปโหลดที่เร็วขึ้นอย่างเห็นได้ชัด

    ระดับการบีบอัด: # ตัวเลือก ค่าเริ่มต้นคือ 6
    # หากเป็นจริง สิ่งประดิษฐ์ที่มีชื่อตรงกันจะถูกลบออกก่อนที่จะอัปโหลดสิ่งประดิษฐ์ใหม่ หากเป็นเท็จ การดำเนินการจะล้มเหลวหากมีสิ่งประดิษฐ์สำหรับชื่อที่กำหนดไว้แล้ว จะไม่ล้มเหลวหากไม่มีสิ่งประดิษฐ์ดังกล่าว

    เขียนทับ: # ตัวเลือก ค่าเริ่มต้นคือเท็จ
    # หากเป็นจริง ไฟล์ที่ซ่อนอยู่จะรวมอยู่ในอาร์ทิแฟกต์ หากเป็นเท็จ ไฟล์ที่ซ่อนอยู่จะไม่รวมอยู่ในอาร์ทิแฟกต์

    include-hidden-files: # ตัวเลือก ค่าเริ่มต้นคือ false
                 - ชื่อ: ดาวน์โหลดสิ่งประดิษฐ์สร้าง
  การใช้งาน: actions/download-artifact@v4.3.0
  กับ:
    # ชื่อของสิ่งประดิษฐ์ที่จะดาวน์โหลด หากไม่ได้ระบุ สิ่งประดิษฐ์ทั้งหมดสำหรับการเรียกใช้จะถูกดาวน์โหลด
    ชื่อ: # ตัวเลือก
    # ID ของสิ่งประดิษฐ์ที่จะดาวน์โหลด คั่นด้วยจุลภาค สามารถใช้ทั้ง `artifact-ids` หรือ `name` ได้ แต่ไม่สามารถใช้ทั้งสองอย่างได้
    artifact-ids: # ตัวเลือก
    # เส้นทางปลายทาง รองรับการขยายเครื่องหมายทิลเดอพื้นฐาน ค่าเริ่มต้นคือ $GITHUB_WORKSPACE
    เส้นทาง: # ตัวเลือก
    # รูปแบบ glob ที่ตรงกับสิ่งประดิษฐ์ที่ควรดาวน์โหลด จะถูกละเว้นหากระบุชื่อ
    รูปแบบ: # ตัวเลือก
    # เมื่อจับคู่สิ่งประดิษฐ์หลายรายการแล้ว พฤติกรรมของไดเร็กทอรีปลายทางจะเปลี่ยนไป หากเป็นจริง สิ่งประดิษฐ์ที่ดาวน์โหลดจะอยู่ในไดเร็กทอรีเดียวกันที่ระบุโดยเส้นทาง หากเป็นเท็จ สิ่งประดิษฐ์ที่ดาวน์โหลดจะถูกแยกออกเป็นไดเร็กทอรีที่มีชื่อเฉพาะภายในเส้นทางที่ระบุ
    รวมหลายรายการ: # ตัวเลือก ค่าเริ่มต้นคือเท็จ
    # โทเค็น GitHub ที่ใช้ในการตรวจสอบสิทธิ์ด้วย GitHub API โทเค็นนี้จำเป็นเมื่อดาวน์โหลดอาร์ทิแฟกต์จากที่เก็บข้อมูลอื่นหรือจากการทำงานเวิร์กโฟลว์อื่น หากไม่ได้ระบุสิ่งนี้ การดำเนินการจะพยายามดาวน์โหลดอาร์ทิแฟกต์จากที่เก็บข้อมูลปัจจุบันและการทำงานเวิร์กโฟลว์ปัจจุบัน
    github-token: # ตัวเลือก
    # เจ้าของที่เก็บข้อมูลและชื่อที่เก็บข้อมูลเชื่อมกันด้วย "/" หากระบุ github-token นี่คือที่เก็บข้อมูลที่จะดาวน์โหลดสิ่งประดิษฐ์
    ที่เก็บข้อมูล: # ตัวเลือก ค่าเริ่มต้นคือ ${{ github.repository }}
    # ID ของเวิร์กโฟลว์ที่ทำการอัปโหลดอาร์ติแฟกต์ที่ต้องการ หากระบุ github-token นี่คือการรันที่อาร์ติแฟกต์จะถูกดาวน์โหลดจาก
    run-id: # ตัวเลือก ค่าเริ่มต้นคือ ${{ github.run_id }}
            - ชื่อ: ตั้งค่า Java JDK
  ใช้: actions/setup-java@v3.14.1
  กับ:
    # เวอร์ชัน Java ที่จะตั้งค่า ใช้เวอร์ชัน Java ทั้งหมดหรือทั้งหมด ดูตัวอย่างไวยากรณ์ที่รองรับในไฟล์ README
    java-version: # ตัวเลือก
    # เส้นทางไปยังไฟล์ `.java-version` ดูตัวอย่างไวยากรณ์ที่รองรับในไฟล์ README
    ไฟล์ java-version: # ตัวเลือก
    # การแจกจ่าย Java ดูรายการการแจกจ่ายที่รองรับในไฟล์ README
    การกระจาย:
    # ประเภทแพ็คเกจ (jdk, jre, jdk+fx, jre+fx)
    java-package: # ตัวเลือก, ค่าเริ่มต้นคือ jdk
    # สถาปัตยกรรมของแพ็คเกจ (ค่าเริ่มต้นเป็นสถาปัตยกรรมของตัวเรียกใช้งานการดำเนินการ)
    สถาปัตยกรรม: # ตัวเลือก
    # เส้นทางไปยังที่ตั้งของ JDK ที่ถูกบีบอัด
    jdkFile: # ตัวเลือก
    # ตั้งค่าตัวเลือกนี้หากคุณต้องการให้การดำเนินการตรวจสอบเวอร์ชันล่าสุดที่มีอยู่ซึ่งตรงตามข้อกำหนดเวอร์ชัน
    ตรวจสอบล่าสุด: # ตัวเลือก
    # ID ของที่เก็บข้อมูลการจัดการการแจกจ่ายในไฟล์ pom.xml ค่าเริ่มต้นคือ `github`
    รหัสเซิร์ฟเวอร์: # ตัวเลือก ค่าเริ่มต้นคือ GitHub
    # ชื่อตัวแปรสภาพแวดล้อมสำหรับชื่อผู้ใช้สำหรับการตรวจสอบสิทธิ์ไปยังคลังเก็บ Apache Maven ค่าเริ่มต้นคือ $GITHUB_ACTOR
    ชื่อผู้ใช้เซิร์ฟเวอร์: # ตัวเลือก ค่าเริ่มต้นคือ GITHUB_ACTOR
    # ชื่อตัวแปรสภาพแวดล้อมสำหรับรหัสผ่านหรือโทเค็นสำหรับการตรวจสอบสิทธิ์ไปยังคลังเก็บ Apache Maven ค่าเริ่มต้นคือ $GITHUB_TOKEN
    รหัสผ่านเซิร์ฟเวอร์: # ตัวเลือก ค่าเริ่มต้นคือ GITHUB_TOKEN
    # เส้นทางที่จะเขียนไฟล์ settings.xml ค่าเริ่มต้นคือ ~/.m2
    เส้นทางการตั้งค่า: # ตัวเลือก
    # เขียนทับไฟล์ settings.xml ถ้ามี ค่าเริ่มต้นคือ "true"
    การตั้งค่าการเขียนทับ: # ตัวเลือก ค่าเริ่มต้นคือจริง
    # คีย์ส่วนตัว GPG ที่จะนำเข้า ค่าเริ่มต้นคือสตริงว่าง
    gpg-private-key: # ตัวเลือก
    # ชื่อตัวแปรสภาพแวดล้อมสำหรับรหัสผ่านคีย์ส่วนตัวของ GPG ค่าเริ่มต้นคือ $GPG_PASSPHRASE
    gpg-passphrase: # ตัวเลือก
    # ชื่อของแพลตฟอร์มการสร้างที่จะแคชการอ้างอิง อาจเป็น "maven" "gradle" หรือ "sbt"
    แคช: # ตัวเลือก
    # วิธีแก้ปัญหาเพื่อส่งสถานะงานไปยังขั้นตอนการโพสต์งาน ตัวแปรนี้ไม่ได้มีไว้สำหรับการตั้งค่าด้วยตนเอง
    สถานะงาน: # ตัวเลือก ค่าเริ่มต้นคือ ${{ job.status }}
    # โทเค็นที่ใช้ในการตรวจสอบสิทธิ์เมื่อดึงข้อมูลเวอร์ชันที่โฮสต์บน github.com เช่น สำหรับ Microsoft Build ของ OpenJDK เมื่อเรียกใช้การดำเนินการนี้บน github.com ค่าเริ่มต้นก็เพียงพอแล้ว เมื่อเรียกใช้บน GHES คุณสามารถส่งโทเค็นการเข้าถึงส่วนบุคคลสำหรับ github.com ได้หากคุณประสบปัญหาการจำกัดอัตรา
    โทเค็น: # ตัวเลือก ค่าเริ่มต้นคือ ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # ชื่อของ ID ของ Maven Toolchain หากไม่ต้องการชื่อเริ่มต้นของ "${distribution}_${java-version}" ดูตัวอย่างไวยากรณ์ที่รองรับในไฟล์การใช้งานขั้นสูง
    mvn-toolchain-id: # ตัวเลือก
    # ชื่อของผู้จำหน่าย Maven Toolchain หากไม่ต้องการชื่อเริ่มต้น "${distribution}" ดูตัวอย่างไวยากรณ์ที่รองรับในไฟล์การใช้งานขั้นสูง
    mvn-toolchain-vendor: # ตัวเลือก
            - ชื่อ: การติดตั้ง .NET Core SDK
  ใช้: actions/setup-dotnet@v3.4.2
  กับ:
    # เวอร์ชัน SDK เสริมที่จะใช้ หากไม่มีให้ จะติดตั้งเวอร์ชัน global.json เมื่อพร้อมใช้งาน ตัวอย่าง: 2.2.104, 3.1, 3.1.x, 3.x, 6.0.2xx
    dotnet-version: # ตัวเลือก
    # คุณภาพการสร้างที่เลือกได้ ค่าที่เป็นไปได้คือ: รายวัน, ลงนาม, ตรวจสอบแล้ว, ดูตัวอย่าง, ga
    dotnet-quality: # ตัวเลือก
    # ตำแหน่ง global.json ที่เป็นทางเลือก หาก global.json ของคุณไม่ได้อยู่ในรูทของ repo
    ไฟล์ global-json: # ตัวเลือก
    # แหล่งแพ็คเกจเสริมสำหรับการตั้งค่าการตรวจสอบสิทธิ์ จะตรวจสอบ NuGet.config ที่มีอยู่ใดๆ ในรูทของที่เก็บ และจัดเตรียม NuGet.config ชั่วคราวโดยใช้ตัวแปรสภาพแวดล้อม NUGET_AUTH_TOKEN เป็น ClearTextPassword
    แหล่งที่มา-url: # ตัวเลือก
    # เจ้าของตัวเลือกสำหรับใช้แพ็คเกจจากองค์กร/ผู้ใช้ GitHub Package Registry ที่ไม่ใช่เจ้าของของที่เก็บข้อมูลปัจจุบัน ใช้เฉพาะในกรณีที่ระบุ URL GPR ใน source-url ด้วย
    เจ้าของ: # ตัวเลือก
    # ตำแหน่ง NuGet.config ที่เป็นทางเลือก หาก NuGet.config ของคุณไม่ได้อยู่ในรูทของที่เก็บข้อมูล
    ไฟล์ config: # ตัวเลือก
    # ตัวเลือกอินพุตเพื่อเปิดใช้งานการแคชโฟลเดอร์แพ็คเกจทั่วโลกของ NuGet
    แคช: # ตัวเลือก
    # ใช้เพื่อระบุเส้นทางไปยังไฟล์การอ้างอิง: packages.lock.json รองรับไวด์การ์ดหรือรายชื่อไฟล์สำหรับแคชการอ้างอิงหลายรายการ
    เส้นทางการพึ่งพาแคช: # ตัวเลือก
          
